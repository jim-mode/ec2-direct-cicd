# Always send the robots header to tell Google to not index.
add_header X-Robots-Tag noindex always;

# default response
server {
    # this server block catches requests with undefined server names. This is
    # useful so that malformed internal container to container requests don't use the production vhost below
    # http://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names

    listen      80;
    server_name _;

    # Respond to status pings from ALB/ELB
    location /elb-status {
      access_log off;
      return 200;
      add_header Content-Type text/plain;
    }

    location /system-up-check {
      access_log off;
      default_type application/json;
      return 200 '{"status":"success"}';
    }

    location /en/blog/ {
        access_log off;
        try_files $uri /index.php$is_args$args;
    }

    # Send everything else a 444
    location / {
      access_log off;
      return 444;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt { access_log off; log_not_found off; }

    location ~ .php$ {
      fastcgi_pass php:9000;
      # fastcgi_split_path_info ^(.+\\.php)(/.*)$;
      # fastcgi_split_path_info ^(.+\.php)(/.*)$;
      fastcgi_split_path_info ^(.+.php)(/.+)$;
      include fastcgi_params;

      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

      fastcgi_intercept_errors off;
      fastcgi_buffer_size 16k;
      fastcgi_buffers 4 16k;
      internal;
    }
}

server {
  listen 80;
  server_name ~^.*eb.*$;
  index index.html index.php;
  root /var/www/html/public;

  charset utf-8;

  location / {
    try_files $uri /index.php$is_args$args;
#    try_files $uri $uri/ /index.php?$query_string;
  }

  location = /favicon.ico { access_log off; log_not_found off; }
  location = /robots.txt { access_log off; log_not_found off; }

  access_log off;
  error_log /var/log/nginx/error.log error;

  sendfile off;

  client_max_body_size 100m;

  location ~ .php$ {
    fastcgi_pass php:9000;
    # fastcgi_split_path_info ^(.+\\.php)(/.*)$;
    # fastcgi_split_path_info ^(.+\.php)(/.*)$;
    fastcgi_split_path_info ^(.+.php)(/.+)$;
    include fastcgi_params;

    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

    fastcgi_intercept_errors off;
    fastcgi_buffer_size 16k;
    fastcgi_buffers 4 16k;
    internal;
  }

  location ~ /.ht {
    deny all;
  }
  location ~ \\.php$ {
    return 404;
  }
}
